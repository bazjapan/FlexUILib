<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:RadioButtonGroup id="ampm" selectedValue="1" change="this.handleChange()"/>
	</fx:Declarations>
	<s:layout>
		<s:HorizontalLayout>
			
		</s:HorizontalLayout>
	</s:layout>
		
		<fx:Metadata>
			[Event(name="change", type="flash.events.Event")]
		</fx:Metadata>
		
		<fx:Script>
			<![CDATA[
			
			[Bindable] private var _selectedDate:Date = new Date();
			
			[Bindable] 
			[Inspectable(defaultValue='5', category="Other", enumeration="1,5,10,15,30")] 
			public var minuteIncrement:int = 5;
			
			[Bindable]
			public var show_time:Boolean = true;
			[Bindable]
			public var show_date:Boolean = true;
				
			
			public function get selectedDate():Date
			{
			this.validateNow();
			return this._selectedDate;
			}
			
			[Bindable]
			public function set selectedDate(value:Date):void
			{
			if(!show_time){
					value.setHours(0,0,0,0);
					
			}	
			this._selectedDate = value
			this.date.selectedDate = this._selectedDate
			if(value.getHours() >= 12)
			{
			this.ampm.selectedValue = 2;
			}
			else
			{
			this.ampm.selectedValue = 1;
			}
			
			if(value.getHours() < 13 )
			this.hours.value = value.getHours()
			else
			this.hours.value = value.getHours() - 12
			
			if(value.getHours() == 0)
			this.hours.value = 12;
			
			this.minutes.value = value.getMinutes()
			this.validateNow();
			}
			
			override public function validateProperties():void
			{
			super.validateProperties();
			
			}
			
			public function handleChange():void
			{
			
			var militaryHours:int = hours.value;
			if(ampm.selectedValue == 2 && hours.value != 12)
			militaryHours = hours.value+12; 
			else if(ampm.selectedValue == 1 && hours.value == 12)
			militaryHours = 0;
			var selDate:Date = this.date.selectedDate;
			var date:Date = new Date(
			selDate.getFullYear(),
			selDate.getMonth(),
			selDate.getDate(),
			militaryHours,
			minutes.value)
			this._selectedDate = date;
			
			this.invalidateProperties();
			this.validateNow();
			this.dispatchEvent(new Event("change"));
			
			}
			]]>
		</fx:Script>
	<s:HGroup width="100%" includeInLayout="{show_date}" visible="{show_date}">
		<mx:DateField id="date" selectedDate="{new Date()}" change="handleChange()"/>
		<s:Spacer width="20"/>
	</s:HGroup>
		<s:HGroup width="100%" includeInLayout="{show_time}"  visible="{show_time}">
		<s:NumericStepper  id="hours" minimum="1" maximum="12" stepSize="1" change="handleChange()" valueCommit="handleChange()" textAlign="center"/>
		<s:Label text=":" textAlign="center"/>
		<s:NumericStepper id="minutes" minimum="0"  maximum="55" stepSize="{minuteIncrement}" change="handleChange()" valueCommit="handleChange()" textAlign="center"/>
		<s:Spacer width="10"/>
		<s:RadioButton id="am" value="1" label="AM" group="{ampm}"/>
		<s:RadioButton id="pm" value="2" label="PM" group="{ampm}"/>
		</s:HGroup>

	
</s:Group>
